====================================================================
euclideanGroebner examples
====================================================================

Example to call euclideanGroebner:

  a1:DMP([y,x],INT):= (9*x**2 + 5*x - 3)+ y*(3*x**2 + 2*x + 1)
  a2:DMP([y,x],INT):= (6*x**3 - 2*x**2 - 3*x +3) + y*(2*x**3 - x - 1)
  a3:DMP([y,x],INT):= (3*x**3 + 2*x**2) + y*(x**3 + x**2)
  an:=[a1,a2,a3]
  euclideanGroebner(an)

This will return the weak euclidean Groebner basis set.
All reductions are total reductions.

You can get more information by providing a second argument.
To get the reduced critical pairs do:

  euclideanGroebner(an,"redcrit")

You can get other information by calling:

  euclideanGroebner(an,"info")

which returns:
   ci  =>  Leading monomial  for critpair calculation
   tci =>  Number of terms of polynomial i
   cj  =>  Leading monomial  for critpair calculation
   tcj =>  Number of terms of polynomial j
   c   =>  Leading monomial of critpair polynomial
   tc  =>  Number of terms of critpair polynomial
   rc  =>  Leading monomial of redcritpair polynomial
   trc =>  Number of terms of redcritpair polynomial
   tH  =>  Number of polynomials in reduction list H
   tD  =>  Number of critpairs still to do

The three argument form returns all of the information:

  euclideanGroebner(an,"info","redcrit")


The term ordering is determined by the polynomial type used. 
Suggested types include
   DistributedMultivariatePolynomial
   HomogeneousDistributedMultivariatePolynomial
   GeneralDistributedMultivariatePolynomial
 
See Also:
o )display operations euclideanGroebner
o )show EuclideanGroebnerBasisPackage
o )show DistributedMultivariatePolynomial
o )show HomogeneousDistributedMultivariatePolynomial
o )show GeneralDistributedMultivariatePolynomial
o )show GroebnerPackage

