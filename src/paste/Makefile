## ---------------------------------
## -- Standard Autoconf variables --
## ---------------------------------

SHELL = /bin/bash

prefix = /home/hemmecke/g/fricas-bisect/install
exec_prefix = ${prefix}

bindir = ${exec_prefix}/bin
# sbindir = ${exec_prefix}/sbin
# libexecdir = ${exec_prefix}/libexec
# datarootdir = ${prefix}/share
# datadir = ${datarootdir}
# sysconfdir = ${prefix}/etc
# sharedstatedir = ${prefix}/com
# localstatedir = ${prefix}/var
# includedir = ${prefix}/include
# oldincludedir = /usr/include
# docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
# infodir = ${datarootdir}/info
# htmldir = ${docdir}
# dvidir = ${docdir}
# pdfdir = ${docdir}
# psdir = ${docdir}
libdir = ${exec_prefix}/lib
# lispdir = @lispdir@
# localedir = ${datarootdir}/locale


host = x86_64-unknown-linux
host_alias = 
build = x86_64-unknown-linux
build_alias = 
target = x86_64-unknown-linux
target_alias = 

srcdir = .
abs_srcdir = /home/hemmecke/v/git/fricas-bisect/fricas/src/paste
top_srcdir = ../..
abs_top_srcdir = /home/hemmecke/v/git/fricas-bisect/fricas

# Notice that there is a bug in Autoconf 2.59 whereby the variable
# top_builddir is not defined.  So avoid to use it directly.  Use
# abs_top_builddir.
builddir = .
abs_builddir = /home/hemmecke/v/git/fricas-bisect/fricas/src/paste
top_builddir = ../..
abs_top_builddir = /home/hemmecke/v/git/fricas-bisect/fricas
datadir = ${datarootdir}


AR = ar
CC = gcc
CFLAGS = -g -O2
OBJEXT = o
EXEEXT = 

AUTOCONF = autoconf
AWK = gawk
GOOD_SHELL = /bin/sh
TARGET_AWK = /usr/bin/gawk
INSTALL = /usr/bin/install -c
install_sh = @install_sh@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_script = $(install_sh) -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
## FIXME:  The test done with Autoconf-2.60 and later concludes
##         that "ln -s" is unusable on msys, and therefore defaults to
##         "cp -p", but that default is unusable for us.  For our
##         purpose "ln -s" is just fine on that platform.  Consequently
##         we are explicitly overrding that value here. 
LN_S = ln -s
mkinstalldirs = $(top_srcdir)/config/mkinstalldirs
PATCH = @PATCH@
RANLIB = ranlib
TAR = tar
TOUCH = touch

# The list of make targets made recursively, by walking sub-directories
# Normally, this is a template generated by Automake, but we don't
# use Automake yet; so, we must do it the hard way.  
# See the corresponding rules in setup-dep.mk
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
		html-recursive info-recursive install-data-recursive \
		install-exec-recursive install-info-recursive \
		install-recursive installcheck-recursive \
		installdirs-recursive pdf-recursive ps-recursive \
		uninstall-info-recursive uninstall-recursive


## Normally, Automake will substitute the value for this variable.
## But, we don't have Automake yet.  So we punt on it.
mkdir_p = mkdir -p

STAMP = echo timestamp >

## ---------------------
## -- Axiom variables --
## ---------------------

## Absolute path to the toplevel source directory for Axiom.  This is
## almost like Autoconf-standard abs_top_srcdir except that, it retains 
## the same syntactic values in subdirectories.

## Where The Axiom distribution main source files are kept.
## Notice, this is the src/ directory within the toplevel source
## directory 

fricas_top_srcdir = /home/hemmecke/v/git/fricas-bisect/fricas

fricas_src_srcdir = $(fricas_top_srcdir)/src
fricas_src_datadir = $(fricas_src_srcdir)/share
fricas_src_algdir = $(fricas_src_srcdir)/algebra

## Where tools for the build machine are built
fricas_builddir = /home/hemmecke/v/git/fricas-bisect/fricas/build/x86_64-unknown-linux
fricas_build_bindir = /home/hemmecke/v/git/fricas-bisect/fricas/build/x86_64-unknown-linux/bin
fricas_build_libdir = $(fricas_builddir)/lib
fricas_build_mandir = $(fricas_builddir)/man

fricas_configdir = $(abs_top_builddir)/config
fricas_c_macros = $(fricas_configdir)/fricas_c_macros.h

LATEX = /usr/bin/latex

## Staging directory for the target DESTDIR
fricas_targetdir = /home/hemmecke/v/git/fricas-bisect/fricas/target/x86_64-unknown-linux
fricas_target_bindir = $(fricas_targetdir)/bin
fricas_target_libdir = $(fricas_targetdir)/lib
fricas_target_srcdir = $(fricas_targetdir)/src
fricas_target_docdir = $(fricas_targetdir)/doc
fricas_target_datadir = $(fricas_targetdir)/share
fricas_target_texdir = $(fricas_target_datadir)/texmf/tex


FRICAS_X11_CFLAGS =  
FRICAS_X11_LDFLAGS =  -lXpm  -lSM -lICE -lX11 

fricas_includes = -I$(fricas_src_srcdir)/include -I$(fricas_configdir)

fricas_build_helper = $(abs_top_srcdir)/src/scripts/build_helper

## Where the staging build directory is found
AXIOM = /home/hemmecke/v/git/fricas-bisect/fricas/target/x86_64-unknown-linux
export AXIOM
BASE = 
export BASE

## Where to find Axiom data bases.
DAASE = $(fricas_src_datadir)
export DAASE

TMP=$(fricas_builddir)

## Old Axiom ENV variables

VERSION = FriCAS 1.2.0

CCF=-O2 -Wall -D_GNU_SOURCE
LDF=-g

DOCUMENT=${axiom_build_document}

## -------------------------------------------
## -- Files generated for the build machine --
## -------------------------------------------
axiom_build_document = /home/hemmecke/v/git/fricas-bisect/fricas/build/scripts/document

TANGLE = notangle
WEAVE = noweave

FRICAS_LISP = sbcl
# Extension of the output file name returned by compile-file
LISPOBJEXT = fasl
FASLEXT = fasl


##

##
AXIOMXLROOT=${AXIOM}/compiler

## GCL command to end a session.
BYE=quit

## Clear suffix-based implicit rule table.
.SUFFIXES:
subdir = src/paste/
pamphlets = Makefile.pamphlet

TAXDIR = $(fricas_targetdir)
THTDIR = $(fricas_target_datadir)/hypertex/pages
SMAN = $(fricas_target_bindir)/sman
IN=     $(fricas_src_srcdir)/input
HTADD=$(fricas_target_bindir)/htadd

# need NAG libraries
NAGPHTS = ANNA-ES ug15

# exint gives wrong results
PHTS = ALIST ARRAY1 ARRAY2 BBTREE BINARY BOP BSTREE CARD CARTEN CCLASS \
       CHAR CLIF COMPLEX CONTFRAC CYCLES DECIMAL DERHAM DFLOAT DMP \
       EQ EQTBL EXIT EXPR FARRAY FILE FLOAT FNAME FPARFRAC FR FR2 \
       FRAC GBF GSTBL HEAP HEXADEC INT INTHEORY KAFILE KERNEL LAZM3PK \
       LEXP LEXTRIPK LIB LIST LODO LODO1 LODO2 LPOLY LWORD MAGMA \
       MAPPKG1 MATRIX MKFUNC MPOLY MSET NONE OCT ODPOL OP OVAR PERMAN \
       PFR POLY QUAT QUAT2 RADIX RECLOS REGSET ROMAN \
       SEG SET SINT SQMATRIX SREGSET \
       STBL STREAM STRING STRTBL SYMBOL TABLE TEXTFILE UNISEG UP \
       VECTOR VOID WUTSET XPBWPOLY XPOLY XPR ZDSOLVE ZLINDEP evalex exdiff \
       exint exlap exlimit exmatrix exseries exsum function grpthry \
       numbers polys ug02 ug03 ug04 ug05 ug06 ug12 ug13

GPHTS = SEGBIND explot2d coverex explot3d graphics \
        ug01 ug07 ug08 ug10 ug11

.PHONY: all nphts gphts

# FriCAs can precompute output and images for later use by
# HyperDoc (see HyperDoc page HTXAdvPage5 and 'src/hyper/htinp.pamphlet').
# This capability is used here to generate most '.pht' used by HyperDoc.

# Without acces to X server we can build only normal pages
all:
	(cd $(THTDIR); \
	  rm -f ht.db ; \
	  ${HTADD} *.ht)
	if [ -f copy_nphts ] ; then \
	   ${MAKE} copy-nphts ; \
	else \
	   $(MAKE) nphts ; \
	fi
	if [ -f copy_gphts ] ; then ${MAKE} copy-gphts ; fi
	(cd $(THTDIR); \
	  rm -f ht.db ; \
	  ${HTADD} *.ht *.pht )

nphts: $(addprefix $(THTDIR)/, $(addsuffix .pht, $(PHTS)))

gphts: $(addprefix $(THTDIR)/, $(addsuffix .pht, $(GPHTS))) mobius.VIEW
	cp -r *.VIEW $(fricas_target_datadir)/viewports

copy-nphts:
	for A in $(addsuffix .pht, $(PHTS)); do \
	  cp $(srcdir)/$${A} $(THTDIR) ; \
	done

copy-gphts:
	for A in $(addsuffix .pht, $(GPHTS)); do \
	  cp $(srcdir)/$${A} $(THTDIR) ; \
	done
	cp -r $(srcdir)/*.VIEW $(fricas_target_datadir)/viewports

GRINPUTS = bouquet.input vectors.input arrows.input ribbon.input newton.input

ug10.pht: $(GRINPUTS)

$(GRINPUTS):  %.input : $(IN)/%.input.pamphlet
	$(axiom_build_document) --tangle --output=$@ $<

$(addprefix $(THTDIR)/, $(addsuffix .pht, $(PHTS) $(GPHTS))): \
    $(THTDIR)/%.pht : %.pht
	cp $< $@

# -noihere works around race in session
$(addsuffix .pht, $(PHTS)): %.pht : $(THTDIR)/%.ht
	(AXIOM=$(TAXDIR); LC_CTYPE=ISO-8859-1; export AXIOM LC_CTYPE; \
         unset DAASE; $(SMAN) -noihere -paste $<)

# -noihere works around race in session
$(addsuffix .pht, $(GPHTS)): %.pht : $(THTDIR)/%.ht
	(AXIOM=$(TAXDIR); export AXIOM; \
         unset DAASE; $(SMAN) -noihere -paste $<)

mobius.input: $(IN)/mobius.input
	cp $< $@

# Clumsy, there should be better way.
mobius.VIEW: mobius.input
	echo '#!/bin/sh' > mob-ax
	echo '$(TAXDIR)/bin/AXIOMsys < mobius.input' >> mob-ax
	chmod u+x mob-ax
	(export AXIOM=$(TAXDIR); unset DAASE; $(SMAN) -noht -noclef \
            -ws ./mob-ax)

mostlyclean-local:
	if [ ! -f copy_gphts ] ; then \
	    rm -rf *.VIEW ; \
	    rm -f *.pht ; \
	fi
	rm -f mob-ax *.input

clean-local: mostlyclean-local

distclean-local: clean-local
## ---------------------------------------
## -- Standard boilerplate dependencies --
## ---------------------------------------

# Recursive rules, usually automatically generated by Automake.
# Since we do not use (yet) Automake, we mimic the behaviour as
# close as possible.
# Recursive wall of sub-directories is based on the variable
# SUBDIRS.  That variable usually contains the of sub-directories
# to be made in depth-first postfix.  However, that order can
# be changed to depth-first prefix by explicitly including "."
# in SUBDIRS.  Rules ending with '-ax' are those specific to the
# the current directory.  Notice that the '-ax' rules are similar 
# to Automake generated '-am'.
.PHONY: $(RECURSIVE_TARGETS)
$(RECURSIVE_TARGETS):
	failcmd='exit 1'; \
	for f in $$MAKEFLAGS; do \
	   case $$f in \
	      *=* | --[!k]*) ;; \
	      *k*) failcmd='fail=yes';; \
	   esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; list='$(SUBDIRS)'; \
	for subdir in $$list; do \
	   echo "Making $$target in $$subdir"; \
	   if test "$$subdir" = "."; then \
	      dot_seen=yes; \
	      local_target="$$target-ax"; \
	   else \
	      local_target="$$target"; \
	   fi; \
	   (cd $$subdir && $(MAKE) $$local_target) || eval $$failcmd; \
	done; \
	if test "$$dot_seen" = "no"; then \
	   $(MAKE) "$$target-ax" || exit 1; \
	fi; test -z "$$fail"

# Recursive cleanup is done in reverse, postfix order of ordinary build.
.PHONY: mostlyclean-recursive
.PHONY: clean-recursive
.PHONY: distclean-recursive
.PHONY: maintainer-clean-recursive
mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@failcmd='exit 1'; \
	for f in $$MAKEFLAGS; do \
	   case $$f in \
	      *=* | --[!k]*) ;; \
	      *k*) failcmd='fail=yes';; \
	   esac; \
	done; \
	dot_seen=no; \
	list='$(SUBDIRS)' ; \
	rev=''; \
	for subdir in $$list; do \
	   if test "$$subdir" != "."; then \
	      rev="$$subdir $$rev"; \
	   fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	   echo "Making $$target in $$subdir"; \
	   if test "$$subdir" = "."; then \
	      local_target="$$target-ax"; \
	   else \
	      local_target="$$target"; \
	   fi; \
	   (cd $$subdir && $(MAKE) $$local_target) || eval $$failcmd; \
	done && test -z "$$fail"

## Rules to make DVI files from pamphlets

.PRECIOUS: %.tex
.PRECIOUS: %.dvi

DVI_FILES = $(addprefix $(fricas_target_docdir)/$(subdir), \
		$(pamphlets:.pamphlet=.dvi))

pamphlets_SOURCES = $(addprefix $(srcdir)/, $(pamphlets))

.PHONY: dvi dvi-ax
dvi: dvi-recursive
dvi-ax: $(fricas_build_texdir)/axiom.sty $(DVI_FILES)

$(fricas_target_docdir)/$(subdir)%.dvi: $(builddir)/%.dvi
	$(mkinstalldirs) $(fricas_target_docdir)/$(subdir)
	$(INSTALL_DATA) $< $@

%.dvi: %.tex $(fricas_build_texdir)/axiom.sty
	TEXINPUTS=".:$(fricas_build_texdir):$${TEXINPUTS}"; \
	export TEXINPUTS; \
	BIBINPUTS=".:$(fricas_build_texdir):$${TEXINPUTS}"; \
	export BIBINPUTS; \
	$(axiom_build_document) --latex $<

%.tex: $(srcdir)/%.pamphlet
	$(axiom_build_document) --weave --output=$@ $<


$(fricas_build_texdir)/axiom.sty: $(fricas_src_docdir)/axiom.sty.pamphlet
	$(mkinstalldirs) $(fricas_build_texdir)/
	$(axiom_build_document) --tangle=axiom.sty --output=$@ $<

$(top_srcdir)/configure: $(top_srcdir)/configure.ac \
			 $(top_srcdir)/config/fricas.m4
	cd $(top_srcdir) && $(AUTOCONF)


.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_srcdir)/config/var-def.mk \
	  $(top_srcdir)/config/setup-dep.mk \
	  $(abs_top_builddir)/config.status
	cd $(abs_top_builddir) && $(SHELL) ./config.status $(subdir)$@

$(axiom_build_document): $(fricas_src_srcdir)/scripts/document.in
	cd $(abs_top_builddir) && \
	$(SHELL) ./config.status build/scripts/document

## Cleanup.
##   Each Makefile is responsible of defining targets named
##   mostlyclean-local, clean-local, and distclean-local.
.PHONY: mostlyclean-generic mostlyclean-local mostlyclean mostlyclean-ax
mostlyclean-generic:
	-rm -f *~
	-rm -f *.log *.aux *.toc

mostlyclean: mostlyclean-recursive
mostlyclean-ax: mostlyclean-generic mostlyclean-local

.PHONY: clean-generic clean-local clean clean-ax
clean-generic: mostlyclean-generic
	-rm -f *.dvi

clean: clean-recursive
clean-ax: clean-generic clean-local

.PHONY: distclean-generic distclean-local distclean distclean-ax
distclean-generic: clean-generic
	-rm -rf $(fricas_target_docdir)/$(subdir)

distclean: distclean-recursive
	-rm Makefile

distclean-ax: distclean-generic distclean-local
