fricas_c_runtime_extra = @fricas_c_runtime_extra@

bin_PROGRAMS = htadd hypertex spadbuf hthits ex2ht

# this is where to put the various commands
OUTLIB=	$(fricas_target_libdir)

# this is where the hypertex documentation files are
HYPER=$(fricas_target_datadir)/hypertex

HTADD=$(fricas_target_bindir)/htadd

BITMAPS = mouse11.bitmap mouse11.mask sdown3d.bitmap sdown3dpr.bitmap \
	sdown.bitmap sup3d.bitmap sup3dpr.bitmap sup.bitmap ht_icon

SCRIPTS=${OUTLIB}/htsearch ${OUTLIB}/presea

BINFILES= $(fricas_target_bindir)/hypertex$(EXEEXT) \
		$(fricas_target_bindir)/htadd$(EXEEXT) \
		${OUTLIB}/spadbuf$(EXEEXT) \
		${OUTLIB}/hthits$(EXEEXT) ${OUTLIB}/ex2ht$(EXEEXT)


HEADERS_src = addfile.h cond.h dialog.h display.h event.h extent.h \
	group.h hterror.h hyper.h initx.h keyin.h lex.h mem.h \
	parse.h parse-aux.h parse-paste.h parse-types.h scrollbar.h \
	show-types.h titlebar.h token.h

HEADERS = $(addprefix $(srcdir)/, $(HEADERS_src) $(BITMAPS)) $(fricas_c_macros)


build_libdir = $(abs_top_builddir)/src/lib

bin_PROGRAMS = hypertex$(EXEEXT) \
		htadd$(EXEEXT) \
		spadbuf$(EXEEXT) \
		ex2ht$(EXEEXT) \
		hthits$(EXEEXT)

hypertex_sources = addfile.c cond.c dialog.c display.c event.c extent1.c \
		extent2.c form-ext.c group.c halloc.c hash.c hterror.c \
		htinp.c hyper.c initx.c input.c item.c keyin.c lex.c \
		macro.c mem.c parse.c parse-aux.c parse-input.c \
		parse-paste.c parse-types.c ReadBitmap.c scrollbar.c \
		show-types.c spadint.c titlebar.c

hypertex_objects = $(hypertex_sources:.c=.$(OBJEXT))
hypertex_LDADD = -L$(build_libdir) -lspad $(fricas_c_runtime_extra)
hypertex_DEPENDENCIES = $(build_libdir)/libspad.a

htadd_sources = addfile.c halloc.c hash.c htadd.c hterror.c lex.c
htadd_SOURCES = $(htadd_sources:.c=.pamphlet)
htadd_objects = $(htadd_sources:.c=.$(OBJEXT))
# FIXME: remove extra dependency
htadd_LDADD = -L$(build_libdir) -lspad $(fricas_c_runtime_extra)
htadd_DEPENDENCIES = $(build_libdir)/libspad.a


spadbuf_sources = spadbuf.c
spadbuf_objects = $(spadbuf_sources:.c=.$(OBJEXT))
spadbuf_LDADD = -L$(build_libdir) -lspad $(fricas_c_runtime_extra)
spadbuf_DEPENDENCIES = $(build_libdir)/libspad.a

hthits_sources = hthits.c
hthits_objects = $(hthits_sources:.c=.$(OBJEXT))
hthits_LDADD = -L$(build_libdir) -lspad
hthits_DEPENDENCIES = $(build_libdir)/libspad.a

ex2ht_sources = ex2ht.c
ex2ht_objects = $(ex2ht_sources:.c=.$(OBJEXT))
ex2ht_LDADD = -L$(build_libdir) -lspad
ex2ht_DEPENDENCIES = $(build_libdir)/libspad.a


subdir = src/hyper/

.PHONY: all all-hyper util-ht
.SUFFIXES:
.SUFFIXES: .c .o .h

all: all-ax

all-ax all-hyper: stamp
	@ echo finished $(builddir)

stamp: ${SCRIPTS} ${BINFILES} stamp-target
	-rm -f stamp
	$(STAMP) stamp

mostlyclean-local:
	-rm -f $(hypertex_objects)
	-rm -f $(htadd_objects)
	-rm -f $(htsearch_objects)
	-rm -f $(spadbuf_objects)
	-rm -f $(hthits_objects)
	-rm -f $(ex2ht_objects)
	-rm -f stamp


clean-local: mostlyclean-local
	-rm -f $(BINFILES)

distclean-local: clean-local

.PRECIOUS: %.$(OBJEXT)

%.$(OBJEXT): $(srcdir)/%.c $(HEADERS)
	$(CC) $(CFLAGS) ${CCF} $(fricas_includes) $(FRICAS_X11_CFLAGS) \
	    -I$(srcdir) -c -o $@ $<

${OUTLIB}/htsearch: $(srcdir)/htsearch
	cp $< $@
	chmod a+x $@

${OUTLIB}/presea: $(srcdir)/presea.in
	sed 's,@TARGET_AWK@,${TARGET_AWK},' $< > $@
	chmod a+x $@

${OUTLIB}/ex2ht$(EXEEXT): $(ex2ht_objects) $(ex2ht_DEPENDENCIES)
	${CC} $(ex2ht_objects) -o $@ $(ex2ht_LDADD) $(FRICAS_X11_LDFLAGS) -lm

$(fricas_target_bindir)/htadd$(EXEEXT): $(htadd_objects) $(htadd_DEPENDENCIES)
	${CC} $(htadd_objects) -o $@ $(htadd_LDADD) $(FRICAS_X11_LDFLAGS) -lm

${OUTLIB}/hthits$(EXEEXT): $(hthits_objects) $(hthits_DEPENDENCIES)
	${CC} $(hthits_objects) -o $@ $(hthits_LDADD) $(FRICAS_X11_LDFLAGS) -lm


$(fricas_target_bindir)/hypertex$(EXEEXT): $(hypertex_objects) $(hypertex_DEPENDENCIES)
	 ${CC} -g $(hypertex_objects) -o $@ $(hypertex_LDADD) \
		$(FRICAS_X11_LDFLAGS) -lm

${OUTLIB}/spadbuf$(EXEEXT): $(spadbuf_objects) $(spadbuf_DEPENDENCIES)
	${CC} $(spadbuf_objects) -o $@ $(spadbuf_LDADD) \
		$(FRICAS_X11_LDFLAGS) -lm


#------------------------------------------------------------------
#---
#--- FriCAS
#--- Copyright (C) 2013,  Ralf Hemmecke <ralf@hemmecke.org>
#---
#------------------------------------------------------------------

# Let's start with a view variables that must be set before starting 'make'.

# We need access to the algebra source in order to generate a list of
# abbreviations (filenames and corresponding constructor name.
ALGEBRASOURCES=${fricas_src_algdir}

###################################################################
# No need to set anything below this point
###################################################################

# A few programs that are needed to generate the pht and ht files and
# add them to the ht.db database.
# We silently assume 'sed' to be available.
SMAN=$(fricas_target_bindir)/sman
HTEX2HT=${AWK} -f ${srcdir}/ht.awk
HTEX2SECMENU=${AWK} -f ${srcdir}/secmenu.awk
ADD2HTDB=${HTADD}
UGSYSCMD2HELP=${AWK} -f ${fricas_src_datadir}/spadhelp/syscmd.awk

###################################################################
htexsrcdir=${abs_top_srcdir}/src/htex
htsrcdir=${srcdir}/pages
inputsrcdir=${htexsrcdir}/input
# this is where the hypertex documentation files are
httargetdir=${HYPER}/pages
bitmapstargetdir=${HYPER}/bitmaps
viewportstargetdir=$(fricas_target_datadir)/viewports
helptargetdir=$(fricas_target_datadir)/spadhelp

###################################################################
# The current chapters. Except for 09, there exists a .htex file for
# each chapter. ug09.tex is generated and is not needed for HyperDoc.
# The lists of categories, domains, packages, and operations in
# chapters 17-20 is probably out of date. It should be generated from
# a call to FriCAS.
#
# All the examples sections are available in .htex format.
#
# Unfortunately, the chapter filenames must match the regular
# expression "ug[0-9][0-9]", since these number will be extracted in
# some .awk scripts. Also, currently, the generated examples chapter
# must be 09.

# 01   An Overview of \Language{}
# 02   Using Types and Modes
# 03   Using \HyperName{}
# 04   Input Files and Output Styles
# 05   Introduction to the \Language{} Interactive Language
# 06   User-Defined Functions, Macros and Rules
# 07   Graphics
# 08   Advanced Problem Solving
# 09 G Some Examples of Domains and Packages
# 10   Interactive Programming
# 11   Packages
# 12   Categories
# 13   Domains
# 14   Browse
# 15   What's New in AXIOM Version 2.x
# 16   \Language{} System Commands
# 17 g Categories (List)
# 18 g Domains (List)
# 19 g Packages (List)
# 20 g Operations (List)
# 21   Programs for FriCAS Images
# 22   Glossary

# The stuff that should be visible in HyperDoc
CHAPTERS=01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20 21 22
EXAMPLES_CHAPTER = 09
EXAMPLES_CHAPTER_NO_LEADING_ZERO = 9
EXAMPLES = ALIST ARRAY1 ARRAY2 BBTREE BINARY BOP BSTREE CARD CARTEN	\
  CCLASS CHAR CLIF COMPLEX CONTFRAC CYCLES DECIMAL DERHAM DFLOAT DMP	\
  EQ EQTBL EXIT EXPR FARRAY FILE FLOAT FNAME FPARFRAC FR FR2 FRAC GBF	\
  GSTBL HEAP HEXADEC INT INTHEORY KAFILE KERNEL LAZM3PK LEXP LEXTRIPK	\
  LIB LIST LODO LODO1 LODO2 LPOLY LWORD MAGMA MAPPKG1 MATRIX MKFUNC	\
  MPOLY MSET NONE OCT ODPOL OP OVAR PERMAN PFR POLY QUAT QUAT2 RADIX	\
  RECLOS REGSET ROMAN SEG SEGBIND SET SINT SQMATRIX SREGSET STBL	\
  STREAM STRING STRTBL SYMBOL TABLE TEXTFILE UNISEG UP VECTOR VOID	\
  WUTSET XPBWPOLY XPOLY XPR ZDSOLVE ZLINDEP
NON_HD_CHAPTERS = ${EXAMPLES_CHAPTER} 17 18 19 20 22

# The chapters used in HyperDoc that must be made from the .htex files.
HD_CHAPTERS = ${filter-out ${NON_HD_CHAPTERS}, ${CHAPTERS}}
HD_CHAPTERS_HTEX=$(patsubst %, ug%.htex, $(HD_CHAPTERS))
HD_CHAPTERS_HT_FILES  =$(patsubst %, ug%.ht, $(HD_CHAPTERS))
HD_CHAPTERS_PHT_FILES =$(patsubst %, ug%.pht, $(HD_CHAPTERS))
HD_CHAPTERS_MENU_FILES=$(patsubst %, tmp/ug%.menu, $(HD_CHAPTERS))

EXAMPLES_HTEX = $(patsubst %, %.htex, $(EXAMPLES))
HD_EXAMPLES_HT_FILES   = $(patsubst %, %.ht, ${EXAMPLES})
HD_EXAMPLES_PHT_FILES  = $(patsubst %, %.pht, ${EXAMPLES})
HD_EXAMPLES_MENU_FILES = $(patsubst %, tmp/%.menu, ${EXAMPLES})

HD_HTEX = ${HD_CHAPTERS_HTEX} ${EXAMPLES_HTEX}

HD_INPUT_FILES  = $(patsubst %.htex, tmp/%.input,  ${HD_HTEX})
HD_DRIVER_FILES = $(patsubst %.htex, tmp/%.driver, ${HD_HTEX})
HD_OUT_FILES    = $(patsubst %.htex, tmp/%.out,    ${HD_HTEX})

###################################################################
# A few files exist in a source .ht format under ${htsrcdir}.
HTEXAMPLES = exdiff exint exlap exlimit exmatrix explot2d explot3d	\
  exseries exsum
HTSOURCES = ${HTEXAMPLES} algebra aspex basic bmcat CPHelp evalex	\
  expose function gloss graphics grpthry help HTXAdvPage1 HTXAdvPage2	\
  HTXAdvPage3 HTXAdvPage4 HTXAdvPage5 HTXAdvPage6 HTXAdvTopPage		\
  HTXFormatPage1 HTXFormatPage2 HTXFormatPage3 HTXFormatPage4		\
  HTXFormatPage5 HTXFormatPage6 HTXFormatPage7 HTXFormatPage8		\
  HTXFormatTopPage HTXIntroPage1 HTXIntroPage2 HTXIntroPage3		\
  HTXIntroTopPage HTXLinkPage1 HTXLinkPage2 HTXLinkPage3 HTXLinkPage4	\
  HTXLinkPage5 HTXLinkPage6 HTXLinkTopPage HTXplay HTXTopPage		\
  HTXTryPage hyperdoc Link man0 mapping newuser numbers patch polys	\
  record releaseNotes rootpage srchkey topics type ug union util

HTSOURCES_HT_FILES  = $(patsubst %, %.ht,  ${HTSOURCES})
HTSOURCES_PHT_FILES = $(patsubst %, %.pht, ${HTSOURCES})
HTEXAMPLES_COVEREXHT_FILES = $(patsubst %, tmp/%.coverexht, ${HTEXAMPLES})
HTEXAMPLES_MENU_FILES = $(patsubst %, tmp/%.menu, ${HTEXAMPLES})

HTGENERATED = xmpexp coverex
HTGENERATED_HT_FILES = $(patsubst %, %.ht,  ${HTGENERATED})
HTGENERATED_PHT_FILES = $(patsubst %, %.pht,  ${HTGENERATED})

HD_HT_FILES = ${HD_CHAPTERS_HT_FILES} ${HD_EXAMPLES_HT_FILES}	\
  ${HTSOURCES_HT_FILES} ${HTGENERATED_HT_FILES}
HD_PHT_FILES = ${HD_CHAPTERS_PHT_FILES} ${HD_EXAMPLES_PHT_FILES}	\
  ${HTSOURCES_PHT_FILES} ${HTGENERATED_PHT_FILES}

###################################################################
# The user guide refers to short programs that are stored under ${inputsrcdir}.
UG_EXTRA_INPUT = arrows bouquet matrix newton ribbon vectors
UG_EXTRA_INPUT_FILES = $(patsubst %, %.input, ${UG_EXTRA_INPUT})

###################################################################
# The actual targets...
###################################################################

.EXPORT_ALL_VARIABLES:

rmdirs:
	-rm -rf tmp ${httargetdir}
stamp-mkdirs:
	mkdir -p tmp
	mkdir -p ${httargetdir}
	mkdir -p ${bitmapstargetdir}
	mkdir -p ${viewportstargetdir}
	mkdir -p ${helptargetdir}
	${STAMP} $@

util-ht: ${httargetdir}/util.ht

###################################################################
# Make the .ht files.
###################################################################
# Find the long names for the abbreviations from XMPLIST from the
# *.spad.pamphlet files.
examples.list: $(wildcard ${ALGEBRASOURCES}/*.spad.pamphlet)
	(for a in ${EXAMPLES}; do echo $$a; done; \
	 sed -n 's/^)abb[a-z]* [a-z][a-z]*  *\([A-Z0-9][A-Z0-9]*\) *\([^ ]*\)/\1 \2/p' ${ALGEBRASOURCES}/*.spad.pamphlet\
	) | sort -k1,1 | ${AWK} '{if(a==$$1){print};a=$$a}' | sort -k2 > $@

xmpexp.ht: examples.list
	echo '% !! DO NOT MODIFY BY HAND !! It is generated.' > $@
	echo '\newcommand{\ExamplesExposedTitle}{${EXAMPLE_TITLE}}' >> $@
	echo '\newcommand{\ExamplesExposedNumber}{${EXAMPLES_CHAPTER_NO_LEADING_ZERO}.}' >> $@ # Chapter 9
	echo '\begin{page}{ExamplesExposedPage}{${EXAMPLES_CHAPTER_NO_LEADING_ZERO}. ${EXAMPLE_TITLE}}' >> $@
	echo 'This is a menu of examples of some domains and packages.' >> $@
	echo 'Click on any item below to see that section.' >> $@
	echo '\beginscroll' >> $@
	echo '\table{'   >> $@
	sed 's/.* //;h;s/1/One/g;s/2/Two/g;s/3/Three/g;s/4/Four/g;s/5/Five/g;s/6/Six/g;s/7/Seven/g;s/8/Eight/g;s/9/Nine/g;s/0/Ten/g;s/^/}{/;s/$$/XmpPage} }/;H;x;s/^/{ \\downlink{/;s/\n//' examples.list >> $@
	echo '}'       >> $@
	echo '\endscroll'     >> $@
	echo '\autobuttons'   >> $@
	echo '\end{page}'     >> $@

${HD_CHAPTERS_MENU_FILES}: tmp/ug%.menu: ${htexsrcdir}/ug%.htex stamp-mkdirs
# Provide chapter and section number as 2nd and 3rd arguments.
#       ${HTEX2SECMENU} SRC CHAPTERNUMBER SECTIONNUMBER MENUDIR
	${HTEX2SECMENU} $< $* 0 tmp > $@

${HD_EXAMPLES_MENU_FILES}: tmp/%.menu: ${htexsrcdir}/%.htex examples.list stamp-mkdirs
#       ${HTEX2SECMENU} SRC CHAPTERNUMBER SECTIONNUMBER MENUDIR
	${HTEX2SECMENU} $< ${EXAMPLES_CHAPTER_NO_LEADING_ZERO} `sed -n '/^$* /=' examples.list` tmp > $@

${HTEXAMPLES_COVEREXHT_FILES}: tmp/%.coverexht: ${htsrcdir}/%.ht stamp-mkdirs
	echo "\\begin{page}{Menu$*}{`sed -n 's/^% Title: //p' $<`}" > $@
	echo '\beginscroll\beginmenu' >> $@
	sed -n \
	  -e 's/^\\begin{page}\({[a-zA-Z0-9]*}\)\({.*}\)/\\menudownlink\2\1/p' \
	  -e '/^\\\(spad\|graph\)paste/p' $< >> $@
	echo '\endmenu\endscroll\end{page}' >> $@
	echo >> $@

coverex.ht: ${HTEXAMPLES_COVEREXHT_FILES}
	(echo '% DO NOT EDIT! This file is generated.'; \
	 echo;\
	 echo '\begin{page}{ExampleCoverPage}{Examples Of FriCAS Commands}';\
	 echo '\beginscroll\table{';\
	 for x in $(HTEXAMPLES); do \
	   echo "{\\downlink{`sed -n 's/^% Title: //p' ${htsrcdir}/$$x.ht`}{Menu$$x}}"; \
	 done;\
	 echo '}\endscroll\end{page}';\
	 echo;\
	 cat  ${HTEXAMPLES_COVEREXHT_FILES}\
	) > $@

$(HD_CHAPTERS_HT_FILES): ug%.ht: ${htexsrcdir}/ug%.htex tmp/ug%.menu
#	${HTEX2HT} SRC MENUDIR
#       Chapter number will be extracted from the source filename ug??.htex
	${HTEX2HT} $< tmp > $@

${HD_EXAMPLES_HT_FILES}: %.ht: ${htexsrcdir}/%.htex tmp/%.menu examples.list
#	${HTEX2HT} SRC MENUDIR CONSTRUCTORNAME CHAPTERNUMBER SECTIONNUMBER
	${HTEX2HT} $< tmp `sed -n 's/^$* //p' examples.list`		\
	    ${EXAMPLES_CHAPTER_NO_LEADING_ZERO} `sed -n '/^$* /=' examples.list` > $@

${HTSOURCES_HT_FILES}: %.ht: ${htsrcdir}/%.ht
	cp $< $@


###################################################################
# Generate the .help file.
###################################################################
# ug16.htex contains documentation about system commands
stamp-ug16helpfiles: stamp-mkdirs
	${UGSYSCMD2HELP} ${htexsrcdir}/ug16.htex
	${STAMP} $@

###################################################################
# Create the final ht.db database.
###################################################################
# Not that ht.db must exist before SMAN can be called. In fact,
# according to page "Standard Pages" in HTXLinkPage2.ht, there must be
# certain content in ht.db, otherwise the hypertex program will
# immediately exit.
#
# So the following uses stamp-db-ht to create a ht.db with all the .ht
# files and the creation of the .pht files depends on existing of that
# stamp.
###################################################################
# Create a partial ht.db database of the .ht files.
###################################################################
# We need to make sure that 'ht.db', the hypertex database file
# is up to date. The file contains absolute offsets into the various
# '.ht' and '.pht' files so it must reflect the current pages.
stamp-ht-db: ${HD_HT_FILES} ${HTADD}
# The -n flag means "create a fresh ht.db".
	${ADD2HTDB} -n ${addprefix ./, ${HD_HT_FILES}}
	${STAMP} $@

###################################################################
# Make the .pht files.
###################################################################
# Input files needed during the computation of the pht files.
${UG_EXTRA_INPUT_FILES}: %: ${inputsrcdir}/%
	cp $< $@

${HD_PHT_FILES}: %.pht: %.ht ${UG_EXTRA_INPUT_FILES} ${SMAN} $(fricas_target_bindir)/hypertex$(EXEEXT) stamp-ht-db
	echo $<
	unset DAASE; HTPATH=. ${SMAN} -noihere -paste $<

###################################################################
# Create the final ht.db database.
###################################################################
ht.db: ${HTADD} ${HD_PHT_FILES}
# For chapters without commands, there will be no .pht file generated.
# Thus, we simply add all .pht files that are available in the target directory.
# Therefore the wildcard.
	${ADD2HTDB} ./*.pht


###################################################################
###################################################################
# The following targets only copy generated files to the target
# directory.
###################################################################

stamp-helpfiles: stamp-ug16helpfiles
	cp *.help ${helptargetdir}
	cp ${fricas_src_datadir}/spadhelp/*.help ${helptargetdir}
	${STAMP} $@

###################################################################
# The bitmap files must be copied to the right place.
###################################################################
stamp-bitmaps: stamp-mkdirs
	cp -r ${srcdir}/bitmaps/* ${bitmapstargetdir}
	${STAMP} $@

###################################################################
# Viewports are generated during the generation of the .pht files.
###################################################################
stamp-viewports: ${HD_PHT_FILES} stamp-mkdirs
	cp -r *.VIEW ${viewportstargetdir}
	${STAMP} $@

###################################################################
# Copy .pht files to target dir.
###################################################################
stamp-pht: ${HD_PHT_FILES}
	cp *.pht ${httargetdir}
	${STAMP} $@

###################################################################
# Copy .ht files to target dir.
###################################################################
stamp-ht: ${addprefix ${httargetdir}/, ${HD_HT_FILES}}
	${STAMP} $@

${addprefix ${httargetdir}/, ${HD_HT_FILES} coverex xmpexp}: ${httargetdir}/%: % stamp-mkdirs
	cp $< $@

###################################################################
# We created ht.db here and then copy it to the target dir.
###################################################################
${httargetdir}/ht.db: ht.db
	cp $< $@

###################################################################
# We first create all .ht, .pht and .VIEW files here and then copy
# them to ${httargetdir}.
# Viewports are generated during the generation of the .pht files.
###################################################################
stamp-target: ${httargetdir}/ht.db stamp-bitmaps stamp-pht stamp-ht stamp-viewports stamp-helpfiles
	${STAMP} $@